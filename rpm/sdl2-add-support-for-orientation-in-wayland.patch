diff --git a/src/video/wayland/SDL_waylandvideo.c b/src/video/wayland/SDL_waylandvideo.c
index 5c331f3ee..804306def 100644
--- a/src/video/wayland/SDL_waylandvideo.c
+++ b/src/video/wayland/SDL_waylandvideo.c
@@ -240,7 +240,32 @@ display_handle_geometry(void *data,
 {
     SDL_VideoDisplay *display = data;
 
-    display->name = SDL_strdup(model);
+    SDL_DisplayOrientation orientation = SDL_ORIENTATION_UNKNOWN;
+    SDL_bool is_portrait = physical_height > physical_width;
+
+    if (SDL_strcmp(model, "") != 0 && SDL_strcmp(display->name, model) != 0) {
+        SDL_free(display->name);
+        display->name = SDL_strdup(model);
+    }
+
+    // Send orientation information
+    switch (transform) {
+    case WL_OUTPUT_TRANSFORM_NORMAL:
+        orientation = is_portrait ? SDL_ORIENTATION_PORTRAIT : SDL_ORIENTATION_LANDSCAPE;
+        break;
+    case WL_OUTPUT_TRANSFORM_90:
+        orientation = is_portrait ? SDL_ORIENTATION_LANDSCAPE_FLIPPED : SDL_ORIENTATION_PORTRAIT_FLIPPED;
+        break;
+    case WL_OUTPUT_TRANSFORM_180:
+        orientation = is_portrait ? SDL_ORIENTATION_PORTRAIT_FLIPPED :  SDL_ORIENTATION_LANDSCAPE_FLIPPED;
+        break;
+    case WL_OUTPUT_TRANSFORM_270:
+        orientation = is_portrait ? SDL_ORIENTATION_LANDSCAPE : SDL_ORIENTATION_PORTRAIT;
+        break;
+    default:
+        break;
+    }
+    SDL_SendDisplayEvent(display, SDL_DISPLAYEVENT_ORIENTATION, orientation);
 }
 
 static void
@@ -272,12 +297,6 @@ static void
 display_handle_done(void *data,
                     struct wl_output *output)
 {
-    /* !!! FIXME: this will fail on any further property changes! */
-    SDL_VideoDisplay *display = data;
-    SDL_AddVideoDisplay(display, SDL_FALSE);
-    wl_output_set_user_data(output, display->driverdata);
-    SDL_free(display->name);
-    SDL_free(display);
 }
 
 static void
@@ -299,6 +318,7 @@ static const struct wl_output_listener output_listener = {
 static void
 Wayland_add_display(SDL_VideoData *d, uint32_t id)
 {
+    int index;
     struct wl_output *output;
     SDL_WaylandOutputData *data;
     SDL_VideoDisplay *display = SDL_malloc(sizeof *display);
@@ -319,7 +339,15 @@ Wayland_add_display(SDL_VideoData *d, uint32_t id)
     data->scale_factor = 1.0;
     display->driverdata = data;
 
-    wl_output_add_listener(output, &output_listener, display);
+    index = SDL_AddVideoDisplay(display, SDL_FALSE);
+    wl_output_set_user_data(output, display->driverdata);
+
+    SDL_free(display);
+
+    if (index != -1) {
+        // Use the display pointer to already added display as data
+        wl_output_add_listener(output, &output_listener, SDL_GetDisplay(index));
+    }
 }
 
 #ifdef SDL_VIDEO_DRIVER_WAYLAND_QT_TOUCH
